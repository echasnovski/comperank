// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// compute_iterative_ratings
List compute_iterative_ratings(Function rate_fun, IntegerVector player1_id, NumericVector score1, IntegerVector player2_id, NumericVector score2, NumericVector initial_ratings);
RcppExport SEXP _comperank_compute_iterative_ratings(SEXP rate_funSEXP, SEXP player1_idSEXP, SEXP score1SEXP, SEXP player2_idSEXP, SEXP score2SEXP, SEXP initial_ratingsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Function >::type rate_fun(rate_funSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type player1_id(player1_idSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type score1(score1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type player2_id(player2_idSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type score2(score2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initial_ratings(initial_ratingsSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_iterative_ratings(rate_fun, player1_id, score1, player2_id, score2, initial_ratings));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_comperank_compute_iterative_ratings", (DL_FUNC) &_comperank_compute_iterative_ratings, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_comperank(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
